stages:
  - build
  - trigger
  - deploy-test
  - test
  - deploy-dev
  - deploy-prod

variables:
  AWS_REGION: eu-central-1
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_NAME: $CI_PROJECT_NAME

.build:
  stage: build
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - echo "Logging in to AWS ECR"
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        IMAGE_TAG=$CI_COMMIT_TAG
        echo "Building image for tag: $IMAGE_TAG"
      else
        IMAGE_TAG=$CI_COMMIT_SHA
        echo "Building image for commit: $IMAGE_TAG"
      fi
    # - aws s3 cp ${S3_ENV_PATH} rust_bot/.env
    - env | grep OPENAI_API_KEY >> rust_bot/.env
    - env | grep DATABASE_URL >> rust_bot/.env
    - env | grep DATABASE_URL_PROD >> rust_bot/.env
    - cat rust_bot/.env
    - echo "Build Docker image"
    - docker build -f docker/${DockerFile} -t $AWS_ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG  .

    - echo "Pushing Docker image to ECR"
    - docker push $AWS_ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG


# .deploy:
#   image:
#     name: alpine/k8s:1.20.15
#     entrypoint: ["/bin/sh", "-c"]
#   before_script:
#     - "export IMAGE_TAG=$(cat image_tag.txt)"
#     - |
#       if [ "${ENVIRONMENT}" = "dev" ] || [ "${ENVIRONMENT}" = "test" ]; then
#         export AWS_ACCESS_KEY_ID=${AWS_DEV_ACCESS_KEY_ID}
#         export AWS_SECRET_ACCESS_KEY=${AWS_DEV_SECRET_ACCESS_KEY}
#       else
#         export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#         export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#       fi
#     - aws --region $AWS_REGION eks update-kubeconfig --name ${CLUSTER_NAME}
#     - kubectl version --short
#   script:
#     - cd helm/${VARIANT}
#     - helm dependency update
#     - |
#       helm upgrade --install buycycl-${VARIANT} -n ${NAMESPACE} . \
#       -f ../values.yaml -f values.yaml \
#       -f ../values.${ENVIRONMENT}.yaml -f values.${ENVIRONMENT}.yaml \
#       --set buycycl-tenant.image.tag=$IMAGE_TAG

build:
  extends: .build
  variables:
    DockerFile: main.dockerfile

# deploy_dev_server:
#   extends: .deploy
#   stage: deploy-dev
#   # needs:
#   #   - acceptance_test
#   variables:
#     ENVIRONMENT: dev
#     VARIANT: server
#     CLUSTER_NAME: eks-dev
#     NAMESPACE: default
#   except:
#     - tags
#   when: manual
